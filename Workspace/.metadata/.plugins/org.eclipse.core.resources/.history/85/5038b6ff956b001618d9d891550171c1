import regex 
import numpy as np
from gensim.models import Word2Vec
import codecs
class PhonemeEmbeddings(object):
    def __init__(self,pathToASJPCorpusFile):
        print("TRAIN PHONEME EMBEDDINGS")
        """
        READ CORPUS FROM ASJP DUMP
        """
        print("READ CORPUS FROM ASJP DUMP")
        #pathToASJPCorpusFile = "data/dataset.tab"
        allWords = []
        for i,line in enumerate(codecs.open(pathToASJPCorpusFile,"r","utf-8")):
            if i > 0:
                line = line.split("\t")
                if "PROTO" not in line[0] and "ARTIFICIAL" not in line[2] and "FAKE" not in line[2]:
                    words = line[10:]
                    #remove invalid characters
                    for i,word in enumerate(words):
                        words[i] = word.replace("%","")
                        words[i] = word.replace(" ","")
                    """
                    for cells with more than one corresponding word, add that word as new entry
                    """
                    tba = []
                    for i_w,word in enumerate(words):
                        if "," in word:
                            for match in  regex.findall("(?<=,).+",word):          
                                tba.append(match)
                            #reduce entry to first occurence of seperator
                            words[i_w] = word[:word.index(",")]
                    words.extend(tba)
                    allWords.extend(words)
            
        """
        EXTRACT ALL PHONEMES AND ADD WORD BOUNDARIES AND GET RID OF EMPTY STRINGS
        """
        print("EXTRACT ALL PHONEMES AND ADD WORD BOUNDARIES AND GET RID OF EMPTY STRINGS")
        allWords = [["<s>"]+getListofASJPPhonemes(word)+["</s>"] for word in allWords if len(word) > 0]
 