import numpy as np
from sklearn.cluster import AffinityPropagation
from scipy.stats import gaussian_kde

X = np.random.normal(0,1,(100,2))
X = np.append(X,np.random.normal(1,0.3,(50,2)),axis=0)
X = np.append(X,np.random.normal(4,1.5,(20,2)),axis=0)

X_p = np.random.normal(0,1,(1000,2))
X_p = np.append(X,np.random.normal(1,0.3,(500,2)),axis=0)
X_p = np.append(X,np.random.normal(4,1.5,(2000,2)),axis=0)

print("size X",len(X))
kernel = gaussian_kde(X_p.T)

pref = [-10/kernel.pdf(x) for x in X]
labels = AffinityPropagation(
                             preference=pref
                             ).fit_predict(X)
print("n labels", len(set(labels)))
import matplotlib.pyplot as plt
cmap = dict((label,np.random.beta(1,1,3)) for label in labels)
for x,label in zip(X,labels):
    plt.scatter(x[0],x[1],color=cmap[label])
plt.show()