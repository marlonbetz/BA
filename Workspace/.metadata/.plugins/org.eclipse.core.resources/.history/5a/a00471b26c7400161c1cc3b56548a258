from pipeline import *
import sys
from scipy.stats import spearmanr,pearsonr

cluster1 = np.random.normal(0,1,(5,2))
cluster2 = np.random.normal(4,.7,(5,2))
cluster3 = np.random.normal(-3,1.3,(4,2))
cluster4 = np.random.normal(0,3,(4,2))
X = np.append(cluster1,np.append(cluster2,np.append(cluster3,cluster4,axis=0),axis=0),axis=0)
print(pearsonr(X[:,0],X[:,1]),spearmanr(X[:,0],X[:,1]))
dists = np.zeros((len(X),len(X)))
for i1,x1 in enumerate(X): 
    print(i1,"/",len(X))
    for i2,x2 in enumerate(X):
        for i3,x3 in enumerate(X):
            if i1 != i2 and i2 != i3 and i1 != i3:
                tmp = np.append(x1,np.append(x2,x3,axis=0),axis=0).reshape((-1,2))
                #print(tmp)
                c = spearmanr(tmp[:,0],tmp[:,1])[0]
                dists[i1,i2] = c
print(dists)
from sklearn.cluster import AffinityPropagation
ap = AffinityPropagation(affinity="precomputed")
y_pred = ap.fit_predict(dists)
print(len(set(y_pred)))
cmap = dict((y,np.random.beta(1,1,3)) for y in y_pred)
import matplotlib.pyplot as plt
for x,y in zip(X,y_pred):
    plt.annotate(y,x,color=cmap[y])
plt.show()