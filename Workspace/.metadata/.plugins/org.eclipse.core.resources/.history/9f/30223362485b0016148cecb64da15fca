import matplotlib.pyplot as plt
from pandas import DataFrame
import codecs
import pickle
import numpy as np
from sklearn.manifold import TSNE
asjp_words = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/asjp_words.pkl","rb"))
concepts_oneHots = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/concepts_oneHots.pkl","rb"))
concepts = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/concepts.pkl","rb"))
embeddings_concept = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/embeddings_concept.pkl","rb"))
embeddings_geo = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/embeddings_geo.pkl","rb"))
embeddings = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/embeddings.pkl","rb"))
geo_words_normalized = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/geo_words_normalized.pkl","rb"))
langs = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/langs.pkl","rb"))
cognate_classes = pickle.load(codecs.open("/Users/marlon/Documents/BA/Workspace/Workspace/embeddings/local_manifold_learning/cognate_classes.pkl","rb"))

print("tsne")
tsne = TSNE(2)
embeddings_tsne = tsne.fit_transform(embeddings)
print("plotting")
import matplotlib.pyplot as plt
cmap = dict((key,np.random.beta(1,1,3)) for key in cognate_classes)
for asjp_word,emb,cognate_class,concept in zip(asjp_words,embeddings_tsne,cognate_classes,concepts):
    if concept == 0
    plt.subplot(2,2,1)
    plt.annotate(asjp_word,emb,color=cmap[cognate_class])

plt.show()