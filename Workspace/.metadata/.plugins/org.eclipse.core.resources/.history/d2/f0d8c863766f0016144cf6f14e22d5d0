import numpy as np
from scipy.stats import gaussian_kde

class ClusterWeighting(object):
    def __init__(self,distr):
        self.distr = distr
        self.kernel = gaussian_kde(distr.T)
        
    
    def getClusterLogLikelihood(self,cluster_members):
        return np.sum(np.array([np.log2(self.kernel.pdf(x)) for x in cluster_members]))
    def getClusterSelfInformation(self,cluster_members):
        return - self.getClusterLogLikelihood(cluster_members)
    def rearrangeLabels(self,y_pred2cluster_members):
        y_pred2selfInformation = dict((y,cw.getClusterSelfInformation(y_pred2members[y])) for y in y_pred2members)
cw = ClusterWeighting(np.random.normal(0,1,(4000,2)))
print(cw.getClusterSelfInformation(np.random.normal(0,.01,(10,2))))
print(cw.getClusterSelfInformation(np.random.normal(-3,.1,(4,2))))